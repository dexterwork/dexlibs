
(整理 by dexter) 2015.08

在專案 app 資料夾內：
build.gradle中如檔案內之參考
其中

 buildTypes {
        release {
            minifyEnabled true  <-- 改為 true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'  <--設定檔名
        }
    }
	
***另二個檔案 copy 至 app 資料夾中, build.gradle 同一個地方

[TIPS]
***以上設定只有簽屬 release apk 才會混淆
***基本檔可來自 sdk/tools/proguard/proguard-android.txt
	
	

以下提供模版：

#指定代碼的壓縮級別
-optimizationpasses 5

#包含不混合大小寫
-dontusemixedcaseclassnames

#不去忽略非公共的庫類
-dontskipnonpubliclibraryclasses

 #優化/不優化輸入的類文件
-dontoptimize

 #檢驗
-dontpreverify

 #混淆記錄
-verbose

 # 混淆演算法
-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*

#保護注解
-keepattributes *Annotation*

# 保持哪些類不被混淆
-keep public class * extends android.app.Fragment
-keep public class * extends android.app.Activity
-keep public class * extends android.app.Application
-keep public class * extends android.app.Service
-keep public class * extends android.content.BroadcastReceiver
-keep public class * extends android.content.ContentProvider
-keep public class * extends android.app.backup.BackupAgentHelper
-keep public class * extends android.preference.Preference
-keep public class com.android.vending.licensing.ILicensingService

#如果有引用v4包可以添加下面這行
-keep public class * extends android.support.v4.app.Fragment


#忽略警告
-ignorewarning

#####################記錄生成的日誌數據,gradle build時在本項目根目錄輸出################

#apk 包含所有 class 的?部?構
-dump class_files.txt
#未混淆的類和成員
-printseeds seeds.txt
#列出從 apk 中?除的代碼
-printusage unused.txt
#混淆前後的映射
-printmapping mapping.txt



################混淆保護自己項目的部分代碼以及引用的第三方 lib#########################
#-libraryjars libs/umeng-analytics-v5.2.4.jar
#-libraryjars libs/alipaysdk.jar
#-libraryjars libs/alipaysecsdk.jar
#-libraryjars libs/alipayutdid.jar
#-libraryjars libs/wup-1.0.0-SNAPSHOT.jar
#-libraryjars libs/weibosdkcore.jar


#三星應用市場需要添加:sdk-v1.0.0.jar,look-v1.0.1.jar
#-libraryjars libs/sdk-v1.0.0.jar
#-libraryjars libs/look-v1.0.1.jar

#我是以libaray的形式引用了一個圖片加載框架,如果不想混淆 keep 掉
-keep class com.nostra13.universalimageloader.** { *; }

#友盟
-keep class com.umeng.**{*;}

#支付寶
-keep class com.alipay.android.app.IAliPay{*;}
-keep class com.alipay.android.app.IAlixPay{*;}
-keep class com.alipay.android.app.IRemoteServiceCallback{*;}
-keep class com.alipay.android.app.lib.ResourceMap{*;}


#信鴿推送
-keep class com.tencent.android.tpush.**  {* ;}
-keep class com.tencent.mid.**  {* ;}


#自己項目特殊處理代碼

#忽略警告
-dontwarn com.veidy.mobile.common.**
#保留一個完整的包
-keep class com.veidy.mobile.common.** {
    *;
 }

-keep class  com.veidy.activity.login.WebLoginActivity{*;}
-keep class  com.veidy.activity.UserInfoFragment{*;}
-keep class  com.veidy.activity.HomeFragmentActivity{*;}
-keep class  com.veidy.activity.CityActivity{*;}
-keep class  com.veidy.activity.ClinikActivity{*;}

#如果引用了v4或者v7包
-dontwarn android.support.**


-keep public class * extends android.view.View {
    public <init>(android.content.Context);
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>(android.content.Context, android.util.AttributeSet, int);
    public void set*(...);
}

#保持 native 方法不被混淆
-keepclasseswithmembernames class * {
    native <methods>;
}

#保持自定義控件類不被混淆
-keepclasseswithmembers class * {
    public <init>(android.content.Context, android.util.AttributeSet);
}

#保持自定義控件類不被混淆
-keepclasseswithmembers class * {
    public <init>(android.content.Context, android.util.AttributeSet, int);
}
#保持自定義控件類不被混淆
-keepclassmembers class * extends android.app.Activity {
   public void *(android.view.View);
}

#保持 Parcelable 不被混淆
-keep class * implements android.os.Parcelable {
  public static final android.os.Parcelable$Creator *;
}

#保持 Serializable 不被混淆
-keepnames class * implements java.io.Serializable

#保持 Serializable 不被混淆並且enum 類也不被混淆
-keepclassmembers class * implements java.io.Serializable {
    static final long serialVersionUID;
    private static final java.io.ObjectStreamField[] serialPersistentFields;
    !static !transient <fields>;
    !private <fields>;
    !private <methods>;
    private void writeObject(java.io.ObjectOutputStream);
    private void readObject(java.io.ObjectInputStream);
    java.lang.Object writeReplace();
    java.lang.Object readResolve();
}

#保持枚舉 enum 類不被混淆 如果混淆報錯，建議直接使用上面的 -keepclassmembers class * implements java.io.Serializable即可
#-keepclassmembers enum * {
#  public static **[] values();
#  public static ** valueOf(java.lang.String);
#}

-keepclassmembers class * {
    public void *ButtonClicked(android.view.View);
}

#不混淆資源類
-keepclassmembers class **.R$* {
    public static <fields>;
}

#避免混淆泛型 如果混淆報錯建議關掉
#–keepattributes Signature

#移除log 測試了下?有用還是建議自己定義一個開關控制是否輸出 log
#-assumenosideeffects class android.util.Log {
#    public static boolean isLoggable(java.lang.String, int);
#    public static int v(...);
#    public static int i(...);
#    public static int w(...);
#    public static int d(...);
#    public static int e(...);
#}

另外加上一段，如果用用到Gson解析包的，直接添加下面這幾行就能成功混淆，不然會報錯。
#gson
#-libraryjars libs/gson-2.2.2.jar
-keepattributes Signature
# Gson specific classes
-keep class sun.misc.Unsafe { *; }
# Application classes that will be serialized/deserialized over Gson
-keep class com.google.gson.examples.android.model.** { *; }


如果你使用了webview
# webview + js
-keepattributes *JavascriptInterface*
# keep 使用 webview 的?
-keepclassmembers class  com.veidy.activity.WebViewActivity {
   public *;
}
# keep 使用 webview 的類的所有的?部類
-keepclassmembers  class  com.veidy.activity.WebViewActivity$*{
    *;
}

